[gd_scene load_steps=25 format=2]

[ext_resource path="res://Project/GameScenes/DirectionalAnimation/DirectionalAnimation.tscn" type="PackedScene" id=1]
[ext_resource path="res://Project/Textures/Ducklings/Duckling_Young_Spritesheet_Animation.png" type="Texture" id=2]

[sub_resource type="AtlasTexture" id=15]
atlas = ExtResource( 2 )
region = Rect2( 0, 32, 16, 16 )

[sub_resource type="AtlasTexture" id=16]
atlas = ExtResource( 2 )
region = Rect2( 16, 32, 16, 16 )

[sub_resource type="AtlasTexture" id=17]
atlas = ExtResource( 2 )
region = Rect2( 0, 32, 16, 16 )

[sub_resource type="AtlasTexture" id=18]
atlas = ExtResource( 2 )
region = Rect2( 32, 32, 16, 16 )

[sub_resource type="AtlasTexture" id=19]
atlas = ExtResource( 2 )
region = Rect2( 0, 64, 16, 16 )

[sub_resource type="AtlasTexture" id=20]
atlas = ExtResource( 2 )
region = Rect2( 16, 64, 16, 16 )

[sub_resource type="AtlasTexture" id=21]
atlas = ExtResource( 2 )
region = Rect2( 0, 64, 16, 16 )

[sub_resource type="AtlasTexture" id=22]
atlas = ExtResource( 2 )
region = Rect2( 32, 64, 16, 16 )

[sub_resource type="AtlasTexture" id=7]
atlas = ExtResource( 2 )
region = Rect2( 0, 48, 16, 16 )

[sub_resource type="AtlasTexture" id=8]
atlas = ExtResource( 2 )
region = Rect2( 16, 48, 16, 16 )

[sub_resource type="AtlasTexture" id=9]
atlas = ExtResource( 2 )
region = Rect2( 0, 48, 16, 16 )

[sub_resource type="AtlasTexture" id=10]
atlas = ExtResource( 2 )
region = Rect2( 32, 48, 16, 16 )

[sub_resource type="AtlasTexture" id=11]
atlas = ExtResource( 2 )
region = Rect2( 0, 16, 16, 16 )

[sub_resource type="AtlasTexture" id=12]
atlas = ExtResource( 2 )
region = Rect2( 16, 16, 16, 16 )

[sub_resource type="AtlasTexture" id=13]
atlas = ExtResource( 2 )
region = Rect2( 0, 16, 16, 16 )

[sub_resource type="AtlasTexture" id=14]
atlas = ExtResource( 2 )
region = Rect2( 32, 16, 16, 16 )

[sub_resource type="AtlasTexture" id=3]
atlas = ExtResource( 2 )
region = Rect2( 0, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=4]
atlas = ExtResource( 2 )
region = Rect2( 16, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=5]
atlas = ExtResource( 2 )
region = Rect2( 0, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=6]
atlas = ExtResource( 2 )
region = Rect2( 32, 0, 16, 16 )

[sub_resource type="SpriteFrames" id=1]
animations = [ {
"frames": [ SubResource( 15 ), SubResource( 16 ), SubResource( 17 ), SubResource( 18 ) ],
"loop": true,
"name": "South_East",
"speed": 5.0
}, {
"frames": [ SubResource( 19 ), SubResource( 20 ), SubResource( 21 ), SubResource( 22 ) ],
"loop": true,
"name": "South",
"speed": 5.0
}, {
"frames": [ SubResource( 7 ), SubResource( 8 ), SubResource( 9 ), SubResource( 10 ) ],
"loop": true,
"name": "North",
"speed": 5.0
}, {
"frames": [ SubResource( 11 ), SubResource( 12 ), SubResource( 13 ), SubResource( 14 ) ],
"loop": true,
"name": "North_East",
"speed": 5.0
}, {
"frames": [ SubResource( 3 ), SubResource( 4 ), SubResource( 5 ), SubResource( 6 ) ],
"loop": true,
"name": "East",
"speed": 5.0
} ]

[sub_resource type="GDScript" id=2]
script/source = "extends AnimatedSprite

\"\"\"
Requires an AnimationPlayer as a child
\"\"\"

func direction_animation(direction: Vector2) -> void:
	var angle = rad2deg(direction.angle_to($RayCast2D.get_cast_to()))
	
	# Apply Directional Animation based on vertical orientation
	if direction.length() == 0:
		$AnimationPlayer.stop()
	else:
		if direction.y < 0:
			vertical_animation(\"North\", angle, $AnimationPlayer)
			# Top
		else:	# Bottom
			# have angle be converted to positive
			# As the direction is already accounted for using \"direction.y < 0\"
			vertical_animation(\"South\", angle * -1, $AnimationPlayer)

func vertical_animation(orientation: String, angle: float, player: AnimationPlayer):
	# Specified an animation player
	var anim 

	
	if player == null:
		anim = self
	else:
		anim = player
	if in_between_degrees(angle, 0, 15.0):
		anim.play(\"East\")
	elif in_between_degrees(angle, 16.0, 75.0):
		anim.play(orientation+\"_East\")
	elif in_between_degrees(angle, 75.1, 105.0):
		anim.play(orientation)
	elif in_between_degrees(angle, 105.1, 150):
		anim.play(orientation+\"_West\")
	elif in_between_degrees(angle, 150.1, 185.0):
		anim.play(\"West\")

func in_between_degrees(angle: float, minimum: float, maximum: float) -> bool:
	if minimum <= angle and angle <= maximum:
		return true
	else:
		return false
"

[node name="DirectionalAnimation" instance=ExtResource( 1 )]
frames = SubResource( 1 )
animation = "default"
script = SubResource( 2 )
