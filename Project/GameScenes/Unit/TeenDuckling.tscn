[gd_scene load_steps=43 format=2]

[ext_resource path="res://Project/Classes/StateMachine/state_machine.gd" type="Script" id=1]
[ext_resource path="res://Project/GameScenes/Unit/States/idle_state.gd" type="Script" id=2]
[ext_resource path="res://Project/GameScenes/Unit/States/flock_state.gd" type="Script" id=3]
[ext_resource path="res://Project/GameScenes/Unit/States/follow_state.gd" type="Script" id=4]
[ext_resource path="res://Project/Classes/Follow/follow.gd" type="Script" id=5]
[ext_resource path="res://Project/GameScenes/DirectionalAnimation/DirectionalAnimation.tscn" type="PackedScene" id=6]
[ext_resource path="res://Project/Classes/Avoidance/avoidance.gd" type="Script" id=7]
[ext_resource path="res://Project/Classes/FlockBehaviour/flock_behaviour.gd" type="Script" id=8]
[ext_resource path="res://Project/Textures/Ducklings/Duckling_Young_Spritesheet_Animation.png" type="Texture" id=10]

[sub_resource type="GDScript" id=1]
script/source = "extends \"res://Project/Classes/VectorMovement/vector_movement.gd\"

# Unit is moving towards a given direction.

class_name Unit

var to_position: Vector2	# Used in flock movement
var target: Node2D 

const ARRIVE_THRESHOLD: = 100.0

var max_speed: = 500.0
var follow_offset: = 100.0

var _velocity: Vector2 = Vector2.ZERO


func _ready():
	._ready()
	$StateMachine.initialize($StateMachine.START_STATE)

func set_target(targ: Node2D) -> void:
	target = targ

func update_follow_position(p_position: Vector2):
	to_position = p_position
	
func _physics_process(delta) -> void:
	$StateMachine.tick(delta)
	
# Following another unit
func set_follow(following: VectorMovement) -> void:
	$Follow.following = following
	
#########################
#   State Transitions   #
#########################

func follow():
	$StateMachine.change_state(\"Follow\")
	
func flock():
	$StateMachine.change_state(\"Flock\")
	
func idle():
	$StateMachine.change_state(\"Idle\")

###########################
"

[sub_resource type="AtlasTexture" id=26]
atlas = ExtResource( 10 )
region = Rect2( 0, 48, 16, 16 )

[sub_resource type="AtlasTexture" id=27]
atlas = ExtResource( 10 )
region = Rect2( 16, 48, 16, 16 )

[sub_resource type="AtlasTexture" id=28]
atlas = ExtResource( 10 )
region = Rect2( 0, 48, 16, 16 )

[sub_resource type="AtlasTexture" id=29]
atlas = ExtResource( 10 )
region = Rect2( 32, 48, 16, 16 )

[sub_resource type="AtlasTexture" id=30]
atlas = ExtResource( 10 )
region = Rect2( 0, 16, 16, 16 )

[sub_resource type="AtlasTexture" id=31]
atlas = ExtResource( 10 )
region = Rect2( 16, 16, 16, 16 )

[sub_resource type="AtlasTexture" id=32]
atlas = ExtResource( 10 )
region = Rect2( 0, 16, 16, 16 )

[sub_resource type="AtlasTexture" id=33]
atlas = ExtResource( 10 )
region = Rect2( 32, 16, 16, 16 )

[sub_resource type="AtlasTexture" id=22]
atlas = ExtResource( 10 )
region = Rect2( 0, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=23]
atlas = ExtResource( 10 )
region = Rect2( 16, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=24]
atlas = ExtResource( 10 )
region = Rect2( 0, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=25]
atlas = ExtResource( 10 )
region = Rect2( 32, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=34]
atlas = ExtResource( 10 )
region = Rect2( 0, 64, 16, 16 )

[sub_resource type="AtlasTexture" id=35]
atlas = ExtResource( 10 )
region = Rect2( 16, 64, 16, 16 )

[sub_resource type="AtlasTexture" id=36]
atlas = ExtResource( 10 )
region = Rect2( 0, 64, 16, 16 )

[sub_resource type="AtlasTexture" id=37]
atlas = ExtResource( 10 )
region = Rect2( 32, 64, 16, 16 )

[sub_resource type="AtlasTexture" id=38]
atlas = ExtResource( 10 )
region = Rect2( 0, 32, 16, 16 )

[sub_resource type="AtlasTexture" id=39]
atlas = ExtResource( 10 )
region = Rect2( 16, 32, 16, 16 )

[sub_resource type="AtlasTexture" id=40]
atlas = ExtResource( 10 )
region = Rect2( 0, 32, 16, 16 )

[sub_resource type="AtlasTexture" id=41]
atlas = ExtResource( 10 )
region = Rect2( 32, 32, 16, 16 )

[sub_resource type="SpriteFrames" id=20]
animations = [ {
"frames": [ SubResource( 26 ), SubResource( 27 ), SubResource( 28 ), SubResource( 29 ) ],
"loop": true,
"name": "North",
"speed": 5.0
}, {
"frames": [ SubResource( 30 ), SubResource( 31 ), SubResource( 32 ), SubResource( 33 ) ],
"loop": true,
"name": "North_East",
"speed": 5.0
}, {
"frames": [ SubResource( 22 ), SubResource( 23 ), SubResource( 24 ), SubResource( 25 ) ],
"loop": true,
"name": "East",
"speed": 5.0
}, {
"frames": [ SubResource( 34 ), SubResource( 35 ), SubResource( 36 ), SubResource( 37 ) ],
"loop": true,
"name": "South",
"speed": 5.0
}, {
"frames": [ SubResource( 38 ), SubResource( 39 ), SubResource( 40 ), SubResource( 41 ) ],
"loop": true,
"name": "South_East",
"speed": 5.0
} ]

[sub_resource type="GDScript" id=21]
script/source = "extends AnimatedSprite

\"\"\"
Requires an AnimationPlayer as a child
\"\"\"

func direction_animation(direction: Vector2) -> void:
	var angle = rad2deg(direction.angle_to($RayCast2D.get_cast_to()))
	
	# Apply Directional Animation based on vertical orientation
	if direction.length() == 0:
		$AnimationPlayer.stop()
	else:
		if direction.y < 0:
			vertical_animation(\"North\", angle, $AnimationPlayer)
			# Top
		else:	# Bottom
			# have angle be converted to positive
			# As the direction is already accounted for using \"direction.y < 0\"
			vertical_animation(\"South\", angle * -1, $AnimationPlayer)

func vertical_animation(orientation: String, angle: float, player: AnimationPlayer):
	# Specified an animation player
	var anim 

	
	if player == null:
		anim = self
	else:
		anim = player
	if in_between_degrees(angle, 0, 15.0):
		anim.play(\"East\")
	elif in_between_degrees(angle, 16.0, 75.0):
		anim.play(orientation+\"_East\")
	elif in_between_degrees(angle, 75.1, 105.0):
		anim.play(orientation)
	elif in_between_degrees(angle, 105.1, 150):
		anim.play(orientation+\"_West\")
	elif in_between_degrees(angle, 150.1, 185.0):
		anim.play(\"West\")

func in_between_degrees(angle: float, minimum: float, maximum: float) -> bool:
	if minimum <= angle and angle <= maximum:
		return true
	else:
		return false
"

[sub_resource type="Animation" id=46]
resource_name = "East"
length = 0.8
tracks/0/type = "value"
tracks/0/path = NodePath(".:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "East" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:flip_h")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../CollisionShape2D:scale")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0.515, 0.395 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../CollisionShape2D:rotation_degrees")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../CollisionShape2D:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 6.627 ) ]
}

[sub_resource type="Animation" id=42]
resource_name = "North"
length = 0.8
tracks/0/type = "value"
tracks/0/path = NodePath(".:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "North" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:flip_h")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../CollisionShape2D:scale")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0.515, 0.452 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../CollisionShape2D:rotation_degrees")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../CollisionShape2D:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 3.732 ) ]
}

[sub_resource type="Animation" id=44]
resource_name = "North_East"
length = 0.8
tracks/0/type = "value"
tracks/0/path = NodePath(".:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "North_East" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:flip_h")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../CollisionShape2D:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 7.318 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../CollisionShape2D:rotation_degrees")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ -8.7 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../CollisionShape2D:scale")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0.515, 0.259 ) ]
}

[sub_resource type="Animation" id=48]
resource_name = "North_West"
length = 0.8
tracks/0/type = "value"
tracks/0/path = NodePath(".:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "North_East" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:flip_h")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../CollisionShape2D:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 7.318 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../CollisionShape2D:rotation_degrees")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 9.0 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../CollisionShape2D:scale")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0.515, 0.259 ) ]
}

[sub_resource type="Animation" id=43]
resource_name = "South"
length = 0.8
tracks/0/type = "value"
tracks/0/path = NodePath(".:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "South" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:flip_h")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../CollisionShape2D:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 4.924 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../CollisionShape2D:scale")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0.445, 0.452 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../CollisionShape2D:rotation_degrees")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[sub_resource type="Animation" id=45]
resource_name = "South_East"
length = 0.8
tracks/0/type = "value"
tracks/0/path = NodePath(".:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "South_East" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:flip_h")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../CollisionShape2D:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 6.596 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../CollisionShape2D:rotation_degrees")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 26.0 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../CollisionShape2D:scale")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0.459, 0.266 ) ]
}

[sub_resource type="Animation" id=49]
resource_name = "South_West"
length = 0.8
tracks/0/type = "value"
tracks/0/path = NodePath(".:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "South_East" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:flip_h")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../CollisionShape2D:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 6.596 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../CollisionShape2D:rotation_degrees")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ -26.0 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../CollisionShape2D:scale")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0.459, 0.266 ) ]
}

[sub_resource type="Animation" id=47]
resource_name = "West"
length = 0.8
tracks/0/type = "value"
tracks/0/path = NodePath(".:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "East" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:flip_h")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../CollisionShape2D:scale")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0.515, 0.395 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../CollisionShape2D:rotation_degrees")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../CollisionShape2D:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 6.627 ) ]
}

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 23.5506, 23.7554 )

[sub_resource type="CircleShape2D" id=3]
radius = 57.3328

[node name="Unit 0" type="KinematicBody2D"]
z_index = -1
collision_layer = 2
collision_mask = 2147483654
script = SubResource( 1 )
__meta__ = {
"_edit_group_": true
}

[node name="Follow" type="Node" parent="."]
script = ExtResource( 5 )

[node name="Flock" type="Node" parent="."]
script = ExtResource( 8 )

[node name="DirectionalAnimation" parent="." instance=ExtResource( 6 )]
scale = Vector2( 2, 2 )
frames = SubResource( 20 )
animation = "South_East"
flip_h = true
script = SubResource( 21 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="DirectionalAnimation"]
anims/East = SubResource( 46 )
anims/North = SubResource( 42 )
anims/North_East = SubResource( 44 )
anims/North_West = SubResource( 48 )
anims/South = SubResource( 43 )
anims/South_East = SubResource( 45 )
anims/South_West = SubResource( 49 )
anims/West = SubResource( 47 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 0, 6.596 )
rotation = -0.453786
scale = Vector2( 0.459, 0.266 )
shape = SubResource( 2 )

[node name="Avoidance" type="Area2D" parent="."]
script = ExtResource( 7 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Avoidance"]
shape = SubResource( 3 )

[node name="StateMachine" type="Node" parent="."]
script = ExtResource( 1 )
START_STATE = NodePath("FlockState")

[node name="FollowState" type="Node" parent="StateMachine"]
script = ExtResource( 4 )

[node name="FlockState" type="Node" parent="StateMachine"]
script = ExtResource( 3 )

[node name="IdleState" type="Node" parent="StateMachine"]
script = ExtResource( 2 )
[connection signal="body_entered" from="Avoidance" to="Avoidance" method="_on_Avoidance_body_entered"]
[connection signal="body_exited" from="Avoidance" to="Avoidance" method="_on_Avoidance_body_exited"]
